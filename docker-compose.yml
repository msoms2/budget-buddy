services:
  nginx:
    image: nginx:alpine
    container_name: budget-buddy-nginx
    restart: unless-stopped
    ports:
      - "8001:80"
    volumes:
      - ./:/var/www/html:cached
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:cached
      - vendor:/var/www/html/vendor
      - node_modules:/var/www/html/node_modules
      - nginx_cache:/var/cache/nginx
    depends_on:
      - php
    networks:
      - budget-buddy-network
    develop:
      watch:
        - path: ./docker/nginx/default.conf
          action: sync
          target: /etc/nginx/conf.d/default.conf

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: budget-buddy-php
    restart: unless-stopped
    expose:
      - "9000"
    # Running as root initially to set permissions
    # The entrypoint script will handle permissions and switch to www-data
    # user: www-data
    volumes:
      - ./:/var/www/html:delegated
      - vendor:/var/www/html/vendor:delegated
      - node_modules:/var/www/html/node_modules:delegated
      - ./storage:/var/www/html/storage:delegated
      - ./bootstrap/cache:/var/www/html/bootstrap/cache:delegated
    environment:
      PHP_OPCACHE_ENABLE: 1
      PHP_OPCACHE_VALIDATE_TIMESTAMPS: 1
      PHP_MEMORY_LIMIT: 512M
      PHP_MAX_EXECUTION_TIME: 120
    networks:
      - budget-buddy-network
    # Add resource limits
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    develop:
      watch:
        - path: ./app
          action: sync
          target: /var/www/html/app
        - path: ./config
          action: sync
          target: /var/www/html/config
        - path: ./routes
          action: sync
          target: /var/www/html/routes
        - path: ./database
          action: sync
          target: /var/www/html/database
        - path: ./resources
          action: sync
          target: /var/www/html/resources
        - path: ./.env
          action: sync
          target: /var/www/html/.env
        - path: ./composer.json
          action: sync+restart
          target: /var/www/html/composer.json
        - path: ./composer.lock
          action: sync+restart
          target: /var/www/html/composer.lock

  mysql:
    image: mysql:8.0
    container_name: budget-buddy-mysql
    restart: always
    environment:
      MYSQL_DATABASE: budget_buddy
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_USER: budget_user
      MYSQL_PASSWORD: budget_password
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3307:3306"
    command: --innodb-buffer-pool-size=256M --max-connections=1000 --performance-schema=OFF
    # Add resource limits
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    networks:
      - budget-buddy-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10

  redis:
    image: redis:alpine
    container_name: budget-buddy-redis
    volumes:
      - redis-data:/data
    command: >
      redis-server 
      --maxmemory 256mb 
      --maxmemory-policy allkeys-lru 
      --appendonly no
      --save ""
      --tcp-keepalive 60
    ports:
      - "6379:6379"
    # Add resource limits
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    networks:
      - budget-buddy-network
  
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: budget-buddy-phpmyadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - MYSQL_ROOT_PASSWORD=
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - budget-buddy-network

  node:
    image: node:20-alpine
    container_name: budget-buddy-node
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html:cached
      - node_modules:/var/www/html/node_modules
    ports:
      - "5173:5173"
    command: sh -c "if [ ! -d node_modules ] || [ ! -f node_modules/.install-completed ]; then npm ci && touch node_modules/.install-completed; fi && npm run dev"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - VITE_HOST=0.0.0.0
      # Add option to improve HMR performance
      - VITE_HMR_PORT=5173
      - VITE_HMR_HOST=localhost 
    # Add resource limits
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      - budget-buddy-network
    develop:
      watch:
        - path: ./resources/js
          action: sync
          target: /var/www/html/resources/js
        - path: ./resources/css
          action: sync
          target: /var/www/html/resources/css
        - path: ./package.json
          action: sync+restart
          target: /var/www/html/package.json
        - path: ./package-lock.json
          action: sync+restart
          target: /var/www/html/package-lock.json
        - path: ./vite.config.js
          action: sync+restart
          target: /var/www/html/vite.config.js
        - path: ./tailwind.config.js
          action: sync
          target: /var/www/html/tailwind.config.js
        - path: ./components.json
          action: sync
          target: /var/www/html/components.json

networks:
  budget-buddy-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  vendor:
    driver: local
  node_modules:
    driver: local
  redis-data:
    driver: local
  nginx_cache:
    driver: local
