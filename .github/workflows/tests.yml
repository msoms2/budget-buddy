name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: budget_buddy_test
          MYSQL_ROOT_PASSWORD: secret
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql
          coverage: xdebug

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Configure Environment
        run: |
          sed -i "s/DB_DATABASE=budget-buddy/DB_DATABASE=budget_buddy_test/" .env
          sed -i "s/DB_PASSWORD=/DB_PASSWORD=secret/" .env

      - name: Update Dependencies
        run: composer update -q --no-ansi --no-interaction --no-progress --prefer-dist
      
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Create Database
        run: |
          mysql -u root -psecret -h 127.0.0.1 -e "CREATE DATABASE IF NOT EXISTS budget_buddy_test;"
          php artisan migrate

      - name: Execute tests
        run: vendor/bin/phpunit

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install NPM dependencies
        run: npm install

      - name: Run frontend tests
        run: npm test
